NAME
    Task::BeLike::LESPEA - Modules that LESPEA uses on a daily basis

VERSION
    version 2.000000

  Builders
    Module::Starter
        Creates a skeleton of a bare module

  Data Parsing
    Spreadsheet::ParseExcel
        Read Microsoft xls files

    Spreadsheet::Read
        Write a wide variety of 'spreadsheets'

    Spreadsheet::WriteExcel
        Write Microsoft xls files

    Text::CSV_XS
        Parse CSV files, no matter how borked up they are

  Database
    DBD::CSV
        Treat a CSV like a database

    DBD::ODBC
        Use Microsoft ODBC connections

    DBI Base database handler

  Dates
    DateTime::Format::DateParse
        Takes a string and makes a DateTime object out of it

  Development
    Devel::NYTProf
        Best profiler available! (by far)

  Dist::Zilla
    Dist::Zilla
        Basic module

    Dist::Zilla::Plugin::Authority
        Adds an authority context to the version

    Dist::Zilla::Plugin::Bugtracker
        Adds all the CPAN links to perldoc

    Dist::Zilla::Plugin::CheckChangeLog
        Make sure the changes file is up-to-date

    Dist::Zilla::Plugin::CheckChangesHasContent
        Make sure the changes file actually has content

    Dist::Zilla::Plugin::CheckChangesTests
        Make sure you're versioning properly

    Dist::Zilla::Plugin::CompileTests
        Ensures that the module(s) compile correctly

    Dist::Zilla::Plugin::CriticTests
        Checks your code for current best practices

    Dist::Zilla::Plugin::HasVersionTests
        Make sure the modules have version info

    Dist::Zilla::Plugin::Homepage
        Adds the homepage to the distmeta info

    Dist::Zilla::Plugin::InstallGuide
        Create an INSTALL file based on which build system you're using

    Dist::Zilla::Plugin::KwaliteeTests
        General quality tests

    Dist::Zilla::Plugin::MinimumPerl
        Figures out which version of Perl is the minimum version required

    Dist::Zilla::Plugin::MinimumVersionTests
        Make sure the code works with provided versions

    Dist::Zilla::Plugin::PodWeaver
        Dynamically creates POD documentation

    Dist::Zilla::Plugin::PortabilityTests
        Ensures your filenames will work cross-platform

    Dist::Zilla::Plugin::Prepender
        Adds a header to all your files (usefull small readme)

    Dist::Zilla::Plugin::ReadmeFromPod
        Creates a README file from the POD documentation

    Dist::Zilla::Plugin::ReportVersions
        List all the version of modules you're using

    Dist::Zilla::Plugin::Repository
        List github repo in perldoc

    Dist::Zilla::Plugin::SynopsisTests
        Makes sure the code in your SYNOPSIS passes a syntax check

    Dist::Zilla::Plugin::UnusedVarsTests
        Checks your program for any unused variables (probably a bug?)

    Dist::Zilla::PluginBundle::Author::LESPEA
        My dzil config

    Perl::MinimumVersion
        Helper module for dzil plugin

    Perl::PrereqScanner
        Helper module for dzil plugin

    Pod::Coverage::TrustPod
        Helper module for dzil plugin

    Pod::Elemental::Transformer::List
        Helper module for dzil plugin

    Pod::Weaver
        Helper module for dzil plugin

    Pod::Weaver::Section::Support
        Helper module for dzil plugin

    Test::CPAN::Meta
        Helper module for dzil plugin

  Error Checking
    Try::Tiny
        At least some basic error checking

    autodie
        Smart failures in the event a file/dir read/write fails - automagic!

  File handling
    File::HomeDir
        Makes getting files out of the users' home directory super easy

    File::ShareDir
        Auto store/fetch files in the current modules' "private" folder
        structure once it's installed

  HTML stuff
    HTML::Tree
        Build a huge tree out of the HTML Dom

    HTML::TreeBuilder::XPath
        Do some xpath lookups for an HTML tree

  Installers
    Exporter::Easy
        Makes exporting functions a snap

    Module::Build
        Pure perl installer

    Module::Install
        Extension of MakeMaker

    Module::Install::AuthorTests
        Run author tests

    Module::Install::ExtraTests
        Run extra tests

  JSON
    JSON
        Basic perl module to parse JSON

    JSON::Any
        Auto use the best available JSON module

    JSON::XS
        Fast C module to parse JSON

  Math
    Math::Big
        Easily compute math with big ints

    Math::Big::Factors
        Compute factors of a number

  Moose
    Getopt::Long::Descriptive
        Required for MooseX::App::Cmd

    Moose
        Base moose module

    MooseX::App::Cmd
        Extend your moose object as a script

    MooseX::Method::Signatures
        Adds greate paramater varification to methods (with a performance
        price)

    MooseX::Types::Common
        As it sounds, common types for Moose

    MooseX::Types::DateTimeX
        Awesome DateTime parser

    MooseX::Types::Structured
        Lets you write enforce structured attributes better than base Moose

  Networking
    Net::CIDR::Lite
        Great CIDR calculation tool

    Net::DNS
        Do some DNS lookups

    Net::IP
        Manip IP address

    Net::Netmask
        Yet another IP manip tool

    Net::Ping
        Simple pinger

  Testing
    Perl::Critic
        Follow best practices

    Test::Most
        A whole bunch of tests modules

    Test::Perl::Critic
        Follow best practices

    Test::Pod
        Ensures your POD compiles ok

    Test::Pod::Coverage
        Make sure you document all of your functions

  Utils
    File::Slurp
        Read in an entire file all at once

    List::MoreUtils
        Provides some advanced-ish list utilities

    Readonly::XS
        Marks variables readonly... better than constant for some things

    Regexp::Common
        A ton of precompiled regular expressions

    namespace::autoclean
        Cleans up the namespace of your modules

  YAML
    YAML
        Basic perl module to parse YAML

    YAML::Any
        Auto use the best available YAML module

    YAML::Syck
        Another fast module to parse YAML

    YAML::XS
        Fast C module to parse JSON

INSTALLATION
    See perlmodinstall for information and options on installing Perl
    modules.

AUTHOR
    Adam Lesperance <lespea@gmail.com>

SUPPORT
  Perldoc
    You can find documentation for this module with the perldoc command.

      perldoc Task::BeLike::LESPEA

  Websites
    The following websites have more information about this module, and may
    be of help to you. As always, in addition to those websites please use
    your favorite search engine to discover more resources.

    *   Search CPAN

        <http://search.cpan.org/dist/Task-BeLike-LESPEA>

    *   RT: CPAN's Bug Tracker

        <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Task-BeLike-LESPEA>

    *   AnnoCPAN: Annotated CPAN documentation

        <http://annocpan.org/dist/Task-BeLike-LESPEA>

    *   CPAN Ratings

        <http://cpanratings.perl.org/d/Task-BeLike-LESPEA>

    *   CPAN Forum

        <http://cpanforum.com/dist/Task-BeLike-LESPEA>

    *   CPANTS Kwalitee

        <http://cpants.perl.org/dist/overview/Task-BeLike-LESPEA>

    *   CPAN Testers Results

        <http://cpantesters.org/distro/T/Task-BeLike-LESPEA.html>

    *   CPAN Testers Matrix

        <http://matrix.cpantesters.org/?dist=Task-BeLike-LESPEA>

  Bugs / Feature Requests
    Please report any bugs or feature requests by email to
    "bug-task-belike-lespea at rt.cpan.org", or through the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Task-BeLike-LESPEA>. You
    will be automatically notified of any progress on the request by the
    system.

  Source Code
    The code is open to the world, and available for you to hack on. Please
    feel free to browse it and play with it, or whatever. If you want to
    contribute patches, please send me a diff or prod me to pull from your
    repository :)

    <https://github.com/lespea/task-belike-lespea>

      git clone git://github.com/lespea/task-belike-lespea.git

COPYRIGHT AND LICENSE
    This software is copyright (c) 2010 by Adam Lesperance.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

DISCLAIMER OF WARRANTY
    BECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
    FOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN
    OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
    PROVIDE THE SOFTWARE "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
    EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE
    ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH
    YOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL
    NECESSARY SERVICING, REPAIR, OR CORRECTION.

    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
    REDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE LIABLE
    TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
    SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
    RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
    FAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
    SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
    DAMAGES.

